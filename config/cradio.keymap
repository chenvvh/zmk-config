// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

&lt { flavor = "hold-preferred"; };

&sk {
    quick-release;
    release-after-ms = <2000>;
};

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y      &kp U               &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G    &kp H      &kp J               &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V  &kp B    &kp N      &kp M               &kp COMMA  &kp DOT  &kp SLASH
                     &mo 1  &mo 2    &kp SPACE  &lt 3 SINGLE_QUOTE
            >;
        };

        mod {
            bindings = <
&kt LCTRL  &kt LSHFT  &kt LALT  &kt LGUI  &trans    &kp N6     &kp N7     &kp N8    &kp N9    &kp N0
&sk LCTRL  &sk LSHFT  &sk LALT  &sk LGUI  &trans    &kp N1     &kp N2     &kp N3    &kp N4    &kp N5
&kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI  &trans    &kp GRAVE  &kp APOS   &kp LBKT  &kp RBKT  &kp BSLH
                                &trans    &trans    &kp MINUS  &kp EQUAL
            >;
        };

        nav {
            bindings = <
&kp LG(LEFT)  &kp BSPC  &kp UP     &kp DEL    &kp LG(RIGHT)    &trans  &trans  &trans  &trans  &trans
&kp LA(LEFT)  &kp LEFT  &kp DOWN   &kp RIGHT  &kp LA(RIGHT)    &trans  &trans  &trans  &trans  &trans
&kt ESC       &kt TAB   &kp SPACE  &kt LSHFT  &kp RET          &trans  &trans  &trans  &trans  &trans
                                   &trans     &trans           &trans  &trans
            >;
        };

        dev {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans            &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans
&trans        &trans        &trans        &trans        &bt BT_CLR      &kp C_PLAY_PAUSE  &kp C_PREV            &kp C_NEXT            &trans  &trans
&trans        &trans        &trans        &trans        &trans          &kp C_MUTE        &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &trans  &trans
                                          &trans        &trans          &trans            &trans
            >;
        };
    };
};
