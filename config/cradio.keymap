// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

&sk { quick-release; };

&lt { flavor = "hold-preferred"; };

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T          &kp Y                 &kp U         &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F      &kp G          &kp H                 &kp J         &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V      &kp B          &kp N                 &kp M         &kp COMMA  &kp DOT  &kp SLASH
                     &lt 1 TAB  &lt 2 SPACE    &mt LEFT_SHIFT ENTER  &lt 3 ESCAPE
            >;
        };

        modpunc {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT      &kp GRAVE       &kp TILDE             &kp EQUAL              &kp PIPE          &kp BACKSLASH
&sk LSHFT        &sk LCTRL    &sk LALT  &sk LGUI    &kp CARET        &kp LESS_THAN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp SINGLE_QUOTE
&trans           &trans       &trans    &trans      &kp AMPERSAND    &kp LEFT_BRACE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_BRACE   &kp DOUBLE_QUOTES
                                        &trans      &trans           &kp MINUS       &kp UNDERSCORE
            >;
        };

        navnum {
            bindings = <
&kp LG(LEFT)  &kp BSPC  &kp UP     &kp DEL    &kp LG(RIGHT)    &kp N5     &kp N6     &kp N7     &kp N8    &kp N9
&kp LA(LEFT)  &kp LEFT  &kp DOWN   &kp RIGHT  &kp LA(RIGHT)    &kp N0     &kp N1     &kp N2     &kp N3    &kp N4
&kp ESC       &kp TAB   &kp SPACE  &kt LSHFT  &kp RET          &kp DOT    &kp PLUS   &kp MINUS  &kp STAR  &kp FSLH
                                   &trans     &trans           &kp ENTER  &kp EQUAL
            >;
        };

        device {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans            &trans             &trans           &trans                &trans
&trans        &trans        &trans        &trans        &bt BT_CLR      &kp C_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
&trans        &trans        &trans        &trans        &trans          &kp C_PLAY_PAUSE  &kp C_PREVIOUS     &kp C_NEXT       &kp C_PAUSE           &kp C_PLAY
                                          &trans        &trans          &trans            &trans
            >;
        };
    };
};
